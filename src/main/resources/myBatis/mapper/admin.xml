<?xml version="1.0" encoding="UTF-8"?>
<!-- mybatis map 선언 표시 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pknu.pass.admin.dao.AdminDao">
    <select id="selectTotalConcert" resultType="Integer">
        SELECT COUNT(*)
        FROM CONCERT
        WHERE 1 = 1
        <choose>
            <when test="type == 1"><!-- 상영 완료 -->
                AND sysdate > prfpdto
            </when>
            <when test="type == 2"><!-- 상영 중 -->
                AND sysdate >= prfpdfrom AND prfpdto >= sysdate
            </when>
            <when test="type == 3">    <!-- 상영 예정 -->
                AND prfpdfrom > sysdate
            </when>
        </choose>
        <if test='filter != null and value != ""'>
            <choose>
                <when test='filter = "ALL"'>
                    AND (PRFNM LIKE '%'||#{value}||'%'
                    OR FCLTYNM LIKE '%'||#{value}||'%')
                </when>
                <otherwise>
                    AND ${filter} LIKE '%'||#{value}||'%'
                </otherwise>
            </choose>
        </if>
    </select>

    <!-- ROWNUM Query(Paging) -->
    <select id="selectConcert" parameterType="paging" resultType="concert">
        SELECT *
        FROM ( SELECT ROWNUM RNUM, C.*
        FROM ( SELECT *
        FROM CONCERT
        WHERE 1 = 1            <!-- 검색 설정을 위한 기본값 -->
        <choose>
            <when test="type == 1"><!-- 상영 완료 -->
                AND sysdate > prfpdto
            </when>
            <when test="type == 2"><!-- 상영 중 -->
                AND sysdate >= prfpdfrom AND prfpdto >= sysdate
            </when>
            <when test="type == 3">    <!-- 상영 예정 -->
                AND prfpdfrom > sysdate
            </when>
        </choose>
        <if test='filter != null and value != ""'>
            <choose>
                <when test='filter = "ALL"'>
                    AND (PRFNM LIKE '%'||#{value}||'%'
                    OR FCLTYNM LIKE '%'||#{value}||'%')
                </when>
                <otherwise>
                    AND ${filter} LIKE '%'||#{value}||'%'
                </otherwise>
            </choose>
        </if>
        ORDER BY MT20ID) C )
        WHERE RNUM BETWEEN #{start} AND #{last}
    </select>

    <select id="selectTotalPlace" parameterType="paging" resultType="Integer">
        SELECT COUNT(*)
        FROM PLACE
        WHERE 1 = 1
        <if test='filter != null and value !=""'>
            <choose>
                <when test='filter = "ALL"'>
                    AND (FCLTYNM LIKE '%'||#{value}||'%'
                    OR SIDONM LIKE '%'||#{value}||'%')
                </when>
                <otherwise>
                    AND ${filter} LIKE '%'||#{value}||'%'
                </otherwise>
            </choose>
        </if>
    </select>

    <select id="selectPlace" parameterType="paging" resultType="place">
        SELECT *
        FROM ( SELECT ROWNUM RNUM, P.*
        FROM ( SELECT *
        FROM PLACE
        WHERE 1 = 1
        <if test='filter != null and value != ""'>
            <choose>
                <when test='filter = "ALL"'>
                    AND (FCLTYNM LIKE '%'||#{value}||'%'
                    OR SIDONM LIKE '%'||#{value}||'%')
                </when>
                <otherwise>
                    AND ${filter} LIKE '%'||#{value}||'%'
                </otherwise>
            </choose>
        </if>
        ORDER BY MT10ID
        ) P )
        WHERE RNUM BETWEEN #{start} AND #{last}
    </select>

    <select id="selectBoxoffice" parameterType="String" resultType="boxof">
        SELECT *
        FROM BOXOFFICE
        WHERE catecode = #{catecode}
        ORDER BY RNUM
    </select>

    <select id="selectTotalMember" parameterType="paging" resultType="Integer">
        SELECT COUNT(*)
        FROM MEMBER
        WHERE grade != 2
        <if test='filter != null and value !=""'>
            AND ${filter} = #{value}
        </if>
    </select>

    <select id="selectMember" parameterType="paging" resultType="login">
        SELECT *
        FROM ( SELECT ROWNUM RNUM, M.*
        FROM ( SELECT ID,EMAIL,CERTIFY,GRADE,ADDRESS,DETAILADDRESS
        FROM MEMBER
        WHERE grade != 2 <!-- admin 계정은 select에서 제외 -->
        <if test='filter != null and value !=""'>
            AND ${filter} = #{value}
        </if>
        ORDER BY GRADE DESC
        ) M )
        WHERE RNUM BETWEEN #{start} AND #{last}
    </select>

    <select id="selectComment" parameterType="paging" resultType="comment">
        SELECT *
        FROM (SELECT
                  ROWNUM RNUM,
                  C.*
              FROM (SELECT *
                    FROM COMMENTS) C)
        WHERE RNUM BETWEEN #{start} AND #{last}
    </select>

    <select id="selectTotalComment" parameterType="paging" resultType="Integer">
        SELECT COUNT(*)
        FROM COMMENTS
    </select>

    <delete id="deleteComment" parameterType="Integer">
        DELETE COMMENTS
        WHERE commentNum = #{commentNum}
    </delete>

    <insert id="insertConcertInf" parameterType="concert">
        MERGE INTO CONCERT
        USING DUAL
        ON (mt20id = #{mt20id})
        WHEN MATCHED THEN
            UPDATE SET
                prfnm        = #{prfnm},
                prfpdfrom    = #{prfpdfrom},
                prfpdto      = #{prfpdto},
                fcltynm      = #{fcltynm},
                prfcast      = #{prfcast},
                prfcrew      = #{prfcrew},
                prfruntime   = #{prfruntime},
                prfage       = #{prfage},
                entrpsnm     = #{entrpsnm},
                pcseguidance = #{pcseguidance},
                genrenm      = #{genrenm},
                mt10id       = #{mt10id},
                dtguidance   = #{dtguidance}
        WHEN NOT MATCHED THEN
            INSERT VALUES
                (
                    #{mt20id},
                    #{prfnm},
                    #{prfpdfrom},
                    #{prfpdto},
                    #{fcltynm},
                    #{prfcast},
                    #{prfcrew},
                    #{prfruntime},
                    #{prfage},
                    #{entrpsnm},
                    #{pcseguidance},
                    #{genrenm},
                    #{mt10id},
                    #{dtguidance}
                )
    </insert>

    <insert id="insertImageInf" parameterType="image">
        MERGE INTO IMAGE
        USING DUAL
        ON (mt20id = #{mt20id} AND imageUrl = #{imageUrl})
        WHEN MATCHED THEN
            UPDATE SET
                imageType  = #{imageType},
                uploadDate = #{uploadDate}
        WHEN NOT MATCHED THEN
            INSERT VALUES
                (
                    IMG_SEQ.NEXTVAL,
                    #{mt20id},
                    #{imageUrl},
                    #{imageType},
                    #{uploadDate}
                )
    </insert>

    <insert id="insertPlaceInf" parameterType="place">
        MERGE INTO PLACE
        USING DUAL
        ON (mt10id = #{mt10id})
        WHEN MATCHED THEN
            UPDATE SET
                fcltynm   = #{fcltynm},
                mt13cnt   = #{mt13cnt},
                seatscale = #{seatscale},
                telno     = #{telno},
                relateurl = #{relateurl}
        WHEN NOT MATCHED THEN
            INSERT VALUES
                (
                    #{fcltynm},
                    #{mt10id},
                    #{mt13cnt},
                    #{fcltychartr},
                    #{opende},
                    #{seatscale},
                    #{telno},
                    #{relateurl},
                    #{adres},
                    #{sidonm},
                    #{la},
                    #{lo}
                )
    </insert>

    <insert id="insertBoxofInf" parameterType="boxof">
        MERGE INTO BOXOFFICE
        USING DUAL
        ON (cate = #{cate} AND rnum = #{rnum})
        WHEN MATCHED THEN
            UPDATE SET
                area     = #{area},
                prfdtcnt = #{prfdtcnt},
                nmrs     = #{nmrs},
                prfpd    = #{prfpd},
                prfplcnm = #{prfplcnm},
                prfnm    = #{prfnm},
                mt20id   = #{mt20id}
        WHEN NOT MATCHED THEN
            INSERT VALUES
                (
                    #{area},
                    #{prfdtcnt},
                    #{nmrs},
                    #{prfpd},
                    #{cate},
                    #{prfplcnm},
                    #{prfnm},
                    #{rnum},
                    #{catecode},
                    #{mt20id}
                )
    </insert>

    <select id="getImageName" parameterType="HashMap" resultType="String">
        SELECT FILENAME
        FROM
            IMAGE
        WHERE
            (FILENAME = #{FILENAME} AND IMAGETYPE = #{IMGAETYPE})
    </select>

    <select id="imgUpdateCheck" parameterType="String" resultType="image">
        SELECT *
        FROM image
        WHERE MT20ID = #{mt20id} AND IMAGETYPE = 1
    </select>

    <delete id="deleteImageInf" parameterType="String">
        DELETE IMAGE
        WHERE mt20id = #{mt20id}
    </delete>

    <delete id="deleteBoxofInf">
        DELETE BOXOFFICE
    </delete>


    <update id="changeGrade" parameterType="login">
        UPDATE MEMBER
        SET
            grade = #{grade}
        WHERE ID = #{id}
    </update>

    <select id="selectMemberComment" parameterType="String" resultType="comment">
        SELECT *
        FROM COMMENTS
        WHERE id = #{id}
    </select>

    <select id="searchPlace" parameterType="String" resultType="place">
        SELECT
            MT10ID,
            FCLTYNM,
            SIDONM
        FROM PLACE
        WHERE FCLTYNM LIKE '%'||#{value}||'%'
    </select>
</mapper>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
